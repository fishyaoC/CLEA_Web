@using Clea_Web.Models;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Clea_Web.ViewModels.SysCodeViewModel.Modify
@{
    Layout = "~/Views/Shared/_LayoutBackEnd.cshtml";
    dbContext db = new dbContext();
}

<div class="content-wrapper">
    <form class="form-sample" method="post" action="@Url.Action("Modify","Sys_Code")">
        <div class="mb-2 mt-2">
            <button type="submit" class="btn btn-info">儲存</button>
            @* <button type="button" class="btn btn-secondary">取消</button> *@
            <a href="@Url.Action("Index","Sys_Code")" class="btn btn-secondary">取消</a>
        </div>
        <div class="row">
            <div class="col-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">
                            選單代碼管理 - @(Model.IsEdit ? "編輯" : "新增")
                        </h4>
                        @Html.AntiForgeryToken()
                        @*回傳狀態*@
                        @Html.HiddenFor(x => x.IsEdit)
                        @*回傳Uid*@
                        @Html.HiddenFor(x => x.Uid)
                        @* <p class="card-description">
                        後臺腳色權限管理-編輯
                        </p> *@
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    @Html.LabelFor(x => x.CItemName, new { @class = "col-sm-3 col-form-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(x => x.CItemName, new { @class = "form-control form-control", placeholder = "選單名稱" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    @Html.LabelFor(x => x.CItemCode, new { @class = "col-sm-3 col-form-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(x => x.CItemCode, new { @class = "form-control form-control", placeholder = "選單代碼" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">是否啟用</label>
                                    @* @Html.LabelFor(x=> x.RStatus, new { @class="col-sm-3 col-form-label" }) *@

                                    <div class="col-sm-9 d-flex justify-content-around">
                                        <div class="form-check">
                                            @Html.RadioButtonFor(x => x.IsActive, true, new { @class = "form-check-input", @name = "IsActive" })
                                            <label for="MTypeB">
                                                是
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @Html.RadioButtonFor(x => x.IsActive, false, new {@class = "form-check-input", @name = "IsActive" })
                                            <label for="MTypeP">
                                                否
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">是否上架</label>
                                    @* @Html.LabelFor(x=> x.RStatus, new { @class="col-sm-3 col-form-label" }) *@

                                    <div class="col-sm-9 d-flex justify-content-around">
                                        <div class="form-check">
                                            @Html.RadioButtonFor(x => x.IsShow, true, new {@class = "form-check-input", @name = "IsShow" })
                                            <label for="S1">
                                                是
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @Html.RadioButtonFor(x => x.IsShow, false, new {@class = "form-check-input", @name = "IsShow" })
                                            <label for="S0">
                                                否
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">選單內容</label>
                                    <!--萬哲-->
                                    <div class="col-12 grid-margin stretch-card">
                                        <div class="card">
                                            <div class="card-body" style="background-color:#D0D0D0; border-radius:8px">



                                                <button type="submit" class="btn btn-info">+新增</button>
                                                @if (Model.modifies != null)
                                                {
                                                    var count = 1;
                                                    @foreach (var child in Model.modifies)
                                                    {
                                                        <div class="col-md-2">
                                                            <div class="form-group row">
                                                                <label class="col-sm-3 col-form-label">@count</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group row">
                                                                <div class="col-sm-9">
                                                                    @Html.TextBoxFor(x => x.modifies[count - 1].CItemName, new { @class = "form-control form-control", placeholder = "選單內容" })
                                                                </div>
                                                            </div>
                                                        </div>

                                                        count++;
                                                    }
                                                }

                                                <button id="addButton" class="btn btn-primary m-2" onclick="addMenu(menuArray.length - 1)">+ 新增</button>
                                                <ol id="menuList">
                                                    <!-- 初始時，直接引用 menuArray[0] -->
                                                    <li>
                                                        <div class="d-flex align-items-center">
                                                            <input type="text" class="form-control" placeholder="選單內容" onchange="updateArrayValue(0, this)">
                                                            <button class="btn btn-primary rounded-circle d-flex justify-content-center align-items-center mx-2"
                                                                    style="width: 30px; height: 30px;" onmousedown="addMenu(0)">
                                                                +
                                                            </button>
                                                            <button class="btn btn-danger rounded-circle d-flex justify-content-center align-items-center"
                                                                    style="width: 30px; height: 30px;" onmousedown="removeMenu(0)">
                                                                -
                                                            </button>
                                                        </div>
                                                    </li>
                                                </ol>

                                            </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>

    </form>
</div>
<script>
    let menuArray = [""];
    const addButton = document.getElementById("addButton");

    function addMenu(index) {
        menuArray.splice(index + 1, 0, "");
        console.log("陣列內容:", menuArray);
        updateMenuList();
    }

    function removeMenu(index) {
        menuArray.splice(index, 1);
        console.log("陣列內容:", menuArray);
        updateMenuList();
    }

    function updateArrayValue(index, inputField) {
        menuArray[index] = inputField.value;
        console.log("陣列內容:", menuArray);
        updateMenuList();
    }

    function updateMenuList() {
        var menuList = document.getElementById("menuList");
        menuList.innerHTML = "";

        menuArray.forEach(function (item, index) {
            var liElement = document.createElement("li");
            liElement.innerHTML = '<div class="d-flex align-items-center">' +
                '<input type="text" class="form-control" placeholder="選單內容" value="' + item + '" onchange="updateArrayValue(' + index + ', this)">' +
                '<button class="btn btn-primary rounded-circle d-flex justify-content-center align-items-center mx-2" style="width: 30px; height: 30px;" onmousedown="addMenu(' + index + ')">+</button>' +
                '<button class="btn btn-danger rounded-circle d-flex justify-content-center align-items-center" style="width: 30px; height: 30px;" onmousedown="removeMenu(' + index + ')">-</button>' +
                '</div>';
            menuList.appendChild(liElement);

            if (index === menuArray.length - 1) {
                liElement.querySelector('input').focus();
            }
        });
    }
</script>